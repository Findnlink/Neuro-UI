@use 'sass:string';

// TODO: Remove

// Description:
// Generates css variables based on parameters.

// Params:
// $variables: properties e.g. background, color...
// $class: Name of the component e.g. button, card...
// $pseudo: Pseudo-classes e.g. hover, active, focus...
// $props: e.g. primary,

// @mixin setVars($variables, $class, $pseudos, $props) {
//   :root {
//     @each $var in $variables {
//       --#{$class}-#{$var}: initial;

//       @each $prop in $props {
//         --#{$class}_#{$prop}-#{$var}: initial;
//       }

//       @each $pseudo in $pseudos {
//         --#{$class}#{$pseudo}-#{$var}: initial;
//         @each $prop in $props {
//           --#{$class}_#{$prop}_#{$pseudo}-#{$var}: initial;
//         }
//       }
//     }
//   }
// }

// Writes
@mixin getVars($variables, $prefix, $fallbacks) {
  @each $name in $variables {
    // generate

    #{$name}: var(--#{$prefix}-#{$name}, generateFallback($fallbacks, $name));
  }
}

// returns custom fallbacks with
@function generateFallback($fallbacks, $name) {
  $fallbackString: '';
  @each $fallback in $fallbacks {
    $fallbackString: $fallbackString + ' var(--#{$fallback}-#{$name},';
  }

  $fallbackString: string.slice($fallbackString, 0, -2);

  @each $fallback in $fallbacks {
    $fallbackString: $fallbackString + ')';
  }

  @return string.unquote($fallbackString);
}
